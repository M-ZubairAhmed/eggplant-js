const ELEMENT_TYPE_TEXT="TEXT_ELEMENT",VALID_CONTAINER_TAGS=["div","button","p",ELEMENT_TYPE_TEXT];let component=null,container=null,hookIndex=0,hooks=new Map,hooksQueue=[];function createElement(e,t,...n){if(e){if("string"==typeof e||"function"==typeof e)return{type:e,props:{...t,children:getPassedInChildren(n)}};console.error("element's type is invalid for createElement, can be either string or function")}else console.error("element's type is missing for createElement")}function getPassedInChildren(e){let t=[];return 0<e.length&&e.forEach(e=>{"string"==typeof e||"number"==typeof e?t.push(createElementText(e)):t.push(e)}),t}function createElementText(e){return createElement(ELEMENT_TYPE_TEXT,{nodeValue:e})}function updateState(e,t){console.log("updateState",e,t,hooksQueue);var{que:n,shouldUpdate:o}=addToQue(t,hooksQueue[e]);hooksQueue[e]=[...n],console.log("shouldUpdate",o,hooksQueue,e),o&&hooks.set(e,t)}function registerHook(e=null,t){return hooks.has(t)||(hooks.set(t,e),null!==e&&(hooksQueue[t]=[e])),t}function useState(e){return registerHook(e,hookIndex),[hooks?.get?.(hookIndex)??e,function(e){return console.log("setState",e),updateState(hookIndex,e),e}]}function startInitialPaint(t,e){let n;n=t.type===ELEMENT_TYPE_TEXT?document.createTextNode(""):document.createElement(t.type);var o=Object.keys(t.props),o=(o.forEach(e=>{"children"!==e&&(n[e]=t.props[e])}),o.includes("children"));o&&t.props.children.forEach(e=>{startInitialPaint(e,n)}),e.appendChild(n)}function render(e,t){t&&e?(container=t,startInitialPaint((component=e)(),t)):console.error("React.render","container or element is missing for render")}function addToQue(e,t=[]){var n=[...t];return 0===t.length?(n.push(e),{que:n,shouldUpdate:!0}):1===t.length?t[0]===e?{que:n,shouldUpdate:!1}:(n.push(e),{que:n,shouldUpdate:!0}):2===t.length?t[1]===e?{que:n,shouldUpdate:!1}:(n.push(e),n.shift(),{que:n,shouldUpdate:!0}):[]}window.React={createElement:createElement,useState:useState},window.ReactDOM={render:render},window.ReactDevTools={hooks:hooks},window.__internal__={ELEMENT_TYPE_TEXT:ELEMENT_TYPE_TEXT,createElementText:createElementText,addToQue:addToQue,startInitialPaint:startInitialPaint};